#!/bin/sh

# define default configuration
POLL=true
SMP=auto
ERL_MAX_PORTS=32000
ERL_PROCESSES=250000
ERL_MAX_ETS_TABLES=1400

# define default environment variables
NODE=ejabberd
HOST=localhost
ERLANG_NODE=$NODE@$HOST
ERL=@erl@
INSTALLUSER=@installuser@
ETCDIR=@SYSCONFDIR@/ejabberd
EJABBERD_CONFIG_PATH=$ETCDIR/ejabberd.cfg
LOGDIR=@LOCALSTATEDIR@/log/ejabberd
SPOOLDIR=@LOCALSTATEDIR@/lib/ejabberd

# read custom configuration
CONFIG=$ETCDIR/ejabberdctl.cfg
[ -f "$CONFIG" ] && . "$CONFIG"

# parse command line parameters
ARGS=
while [ $# -ne 0 ] ; do
    PARAM=$1
    shift
    case $PARAM in
        --) break ;;
        --node) ERLANG_NODE=$1; shift ;;
        --config) EJABBERD_CONFIG_PATH=$1 ; shift ;;
        --ctl-config) CONFIG=$1 ; shift ;;
        --logs) LOGDIR=$1 ; shift ;;
        --spool) SPOOLDIR=$1 ; shift ;;
        *) ARGS="$ARGS $PARAM" ;;
    esac
done

# check the proper system user is used
ID=`id -g`
EJID=`id -g $INSTALLUSER`
EXEC_CMD="false"
if [ $ID -eq 0 ] ; then
	EXEC_CMD="su ${INSTALLUSER} -c"
fi
if [ "$ID" -eq "$EJID" ] ; then
	EXEC_CMD="sh -c"
fi
if [ "$EXEC_CMD" = "false" ] ; then
	echo "This command can only be run by root or the user $INSTALLUSER" >&2
	exit 1
fi

NAME=-name
[ "$ERLANG_NODE" = "${ERLANG_NODE%.*}" ] && NAME=-sname

if [ "$FIREWALL_WINDOW" = "" ] ; then
    KERNEL_OPTS=""
else
    KERNEL_OPTS="-kernel inet_dist_listen_min ${FIREWALL_WINDOW%-*} inet_dist_listen_max ${FIREWALL_WINDOW#*-}"
fi

ERLANG_OPTS="+K $POLL -smp $SMP +P $ERL_PROCESSES $KERNEL_OPTS"

# define additional environment variables
EJABBERDDIR=@LIBDIR@/ejabberd
BEAMDIR=$EJABBERDDIR/ebin
PRIVDIR=$EJABBERDDIR/priv
PBINDIR=$PRIVDIR/bin
SODIR=$PRIVDIR/lib
MSGSDIR=$PRIVDIR/msgs

EJABBERD_LOG_PATH=$LOGDIR/ejabberd.log
SASL_LOG_PATH=$LOGDIR/sasl.log
DATETIME=`date "+%Y%m%d-%H%M%S"`
ERL_CRASH_DUMP=$LOGDIR/erl_crash_$DATETIME.dump
ERL_INETRC=$ETCDIR/inetrc
HOME=$SPOOLDIR

# create the home dir with the proper user if doesn't exist, because it stores cookie file
[ -d $HOME ] || $EXEC_CMD "mkdir -p $HOME"

# export global variables
export EJABBERD_CONFIG_PATH
export MSGSDIR
export EJABBERD_LOG_PATH
export SODIR
export PBINDIR
export ERL_CRASH_DUMP
export ERL_INETRC
export ERL_MAX_PORTS
export ERL_MAX_ETS_TABLES
export HOME
export EXEC_CMD


# Compatibility in ZSH
#setopt shwordsplit 2>/dev/null

# start server
start ()
{
    $EXEC_CMD "$ERL \
      $NAME $ERLANG_NODE \
      -noinput -detached \
      -pa $BEAMDIR \
      -mnesia dir \"\\\"$SPOOLDIR\\\"\" \
      -s ejabberd \
      -sasl sasl_error_logger \\{file,\\\"$SASL_LOG_PATH\\\"\\} \
      $ERLANG_OPTS $ARGS \"$@\""
}

# attach to server
debug ()
{
    echo "--------------------------------------------------------------------"
    echo ""
    echo "IMPORTANT: we will attempt to attach an INTERACTIVE shell"
    echo "to an already running ejabberd node."
    echo "If an ERROR is printed, it means the connection was not succesfull."
    echo "You can interact with the ejabberd node if you know how to use it."
    echo "Please be extremely cautious with your actions,"
    echo "and exit immediately if you are not completely sure."
    echo ""
    echo "To detach this shell from ejabberd, press:"
    echo "  control+c, control+c"
    echo ""
    echo "--------------------------------------------------------------------"
    echo "Press any key to continue"
    read foo
    echo ""
    $EXEC_CMD "$ERL \
      $NAME ${NODE}debug \
      -remsh $ERLANG_NODE \
      $ERLANG_OPTS $ARGS \"$@\""
}

# start interactive server
live ()
{
    echo "--------------------------------------------------------------------"
    echo ""
    echo "IMPORTANT: ejabberd is going to start in LIVE (interactive) mode."
    echo "All log messages will be shown in the command shell."
    echo "You can interact with the ejabberd node if you know how to use it."
    echo "Please be extremely cautious with your actions,"
    echo "and exit immediately if you are not completely sure."
    echo ""
    echo "To exit this LIVE mode and stop ejabberd, press:"
    echo "  q().  and press the Enter key"
    echo ""
    echo "--------------------------------------------------------------------"
    echo "Press any key to continue"
    read foo
    echo ""
    $EXEC_CMD "$ERL \
      $NAME $ERLANG_NODE \
      -pa $BEAMDIR \
      -mnesia dir \"\\\"$SPOOLDIR\\\"\" \
      -s ejabberd \
      $ERLANG_OPTS $ARGS \"$@\""
}

# common control function
ctl ()
{
    $EXEC_CMD "$ERL \
      $NAME ejabberdctl \
      -noinput \
      -pa $BEAMDIR \
      -s ejabberd_ctl -extra $ERLANG_NODE $@"
    result=$?
    case $result in
    0) :;;
    *)
        echo ""
        echo "Commands to start an ejabberd node:"
        echo "  start  Start an ejabberd node in server mode"
        echo "  debug  Attach an interactive Erlang shell to a running ejabberd node"
        echo "  live   Start an ejabberd node in live (interactive) mode"
        echo ""
        echo "Optional parameters when starting an ejabberd node:"
        echo "  --config file      Config file of ejabberd:    $EJABBERD_CONFIG_PATH"
        echo "  --ctl-config file  Config file of ejabberdctl: $CONFIG"
        echo "  --logs dir         Directory for logs:         $LOGDIR"
        echo "  --spool dir        Database spool dir:         $SPOOLDIR"
        echo "  --node nodename    ejabberd node name:         $ERLANG_NODE"
        echo "";;
    esac
    return $result
}

# display ctl usage
usage ()
{
    ctl
    exit
}

case $ARGS in
    ' start') start;;
    ' debug') debug;;
    ' live') live;;
    *) ctl $ARGS;;
esac
