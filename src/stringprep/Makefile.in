# $Id$

CC = @CC@
CFLAGS = @CFLAGS@ @ERLANG_CFLAGS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@ @ERLANG_LIBS@

ifeq ($(shell uname),Darwin)
DYNAMIC_LIB_CFLAGS = -fPIC -bundle -flat_namespace -undefined suppress
else
# Assume Linux-style dynamic library flags
DYNAMIC_LIB_CFLAGS = -fpic -shared
endif

SUBDIRS = 

ERLSHLIBS = ../stringprep_drv.so

OUTDIR = ..
EFLAGS = -I .. -pz ..
# make debug=true to compile Erlang module with debug informations.
ifdef debug
  EFLAGS+=+debug_info
endif

OBJS   = \
	$(OUTDIR)/stringprep.beam

all:    $(OBJS) $(ERLSHLIBS)

$(OUTDIR)/%.beam:       %.erl
	@ERLC@ -W $(EFLAGS) -o $(OUTDIR) $<

#all:	$(ERLSHLIBS)
#	erl -s make all report "{outdir, \"..\"}" -noinput -s erlang halt

$(ERLSHLIBS):	../%.so:	%.c uni_data.c uni_norm.c
			gcc -Wall -O2 $(CFLAGS) $(LDFLAGS) $(INCLUDES) \
			$(subst ../,,$(subst .so,.c,$@)) $(LIBS) \
			-o $@ $(DYNAMIC_LIB_CFLAGS)

clean:
	rm -f $(OBJS) $(ERLSHLIBS)

distclean: clean
	rm -f Makefile

TAGS:
	etags *.erl

