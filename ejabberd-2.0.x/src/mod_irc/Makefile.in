# $Id$

CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@ @LIBICONV@

ERLANG_CFLAGS = @ERLANG_CFLAGS@
ERLANG_LIBS = @ERLANG_LIBS@

ifeq ($(shell uname),Darwin)
	DYNAMIC_LIB_CFLAGS = -fPIC -bundle -flat_namespace -undefined suppress
else
	# Assume Linux-style dynamic library flags
	DYNAMIC_LIB_CFLAGS = -fpic -shared
endif

EFLAGS = -I .. -pz ..
# make debug=true to compile Erlang module with debug informations.
ifdef debug
	EFLAGS+=+debug_info
endif

ERLSHLIBS = ../iconv_erl.so
OUTDIR = ..
SOURCES = $(wildcard *.erl)
BEAMS = $(addprefix $(OUTDIR)/,$(SOURCES:.erl=.beam))

all:    $(BEAMS) $(ERLSHLIBS)

$(OUTDIR)/%.beam:       %.erl
	@ERLC@ -W $(EFLAGS) -o $(OUTDIR) $<

#all:	$(ERLSHLIBS)
#	erl -s make all report "{outdir, \"..\"}" -noinput -s erlang halt

$(ERLSHLIBS):	../%.so:	%.c
			$(CC) $(INCLUDES) $(CFLAGS) $(LDFLAGS) \
			$(subst ../,,$(subst .so,.c,$@)) $(LIBS) \
			$(ERLANG_CFLAGS) $(ERLANG_LIBS) \
			-o $@ $(DYNAMIC_LIB_CFLAGS)

clean:
	rm -f $(BEAMS) $(ERLSHLIBS)

distclean: clean
	rm -f Makefile

TAGS:
	etags *.erl

